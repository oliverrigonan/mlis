#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LendingSystem.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="mlis")]
	public partial class lendingsystemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAspNetRole(AspNetRole instance);
    partial void UpdateAspNetRole(AspNetRole instance);
    partial void DeleteAspNetRole(AspNetRole instance);
    partial void InsertTrnLoan(TrnLoan instance);
    partial void UpdateTrnLoan(TrnLoan instance);
    partial void DeleteTrnLoan(TrnLoan instance);
    partial void InsertAspNetUserClaim(AspNetUserClaim instance);
    partial void UpdateAspNetUserClaim(AspNetUserClaim instance);
    partial void DeleteAspNetUserClaim(AspNetUserClaim instance);
    partial void InsertAspNetUserLogin(AspNetUserLogin instance);
    partial void UpdateAspNetUserLogin(AspNetUserLogin instance);
    partial void DeleteAspNetUserLogin(AspNetUserLogin instance);
    partial void InsertAspNetUserRole(AspNetUserRole instance);
    partial void UpdateAspNetUserRole(AspNetUserRole instance);
    partial void DeleteAspNetUserRole(AspNetUserRole instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertMstCustomer(MstCustomer instance);
    partial void UpdateMstCustomer(MstCustomer instance);
    partial void DeleteMstCustomer(MstCustomer instance);
    partial void InsertMstInterest(MstInterest instance);
    partial void UpdateMstInterest(MstInterest instance);
    partial void DeleteMstInterest(MstInterest instance);
    partial void InsertMstPayType(MstPayType instance);
    partial void UpdateMstPayType(MstPayType instance);
    partial void DeleteMstPayType(MstPayType instance);
    partial void InsertMstTerm(MstTerm instance);
    partial void UpdateMstTerm(MstTerm instance);
    partial void DeleteMstTerm(MstTerm instance);
    partial void InsertMstUser(MstUser instance);
    partial void UpdateMstUser(MstUser instance);
    partial void DeleteMstUser(MstUser instance);
    partial void InsertTrnCollection(TrnCollection instance);
    partial void UpdateTrnCollection(TrnCollection instance);
    partial void DeleteTrnCollection(TrnCollection instance);
    partial void InsertTrnCollectionLine(TrnCollectionLine instance);
    partial void UpdateTrnCollectionLine(TrnCollectionLine instance);
    partial void DeleteTrnCollectionLine(TrnCollectionLine instance);
    #endregion
		
		public lendingsystemDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public lendingsystemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public lendingsystemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public lendingsystemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public lendingsystemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AspNetRole> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRole>();
			}
		}
		
		public System.Data.Linq.Table<TrnLoan> TrnLoans
		{
			get
			{
				return this.GetTable<TrnLoan>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaim>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogin>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<MstCustomer> MstCustomers
		{
			get
			{
				return this.GetTable<MstCustomer>();
			}
		}
		
		public System.Data.Linq.Table<MstInterest> MstInterests
		{
			get
			{
				return this.GetTable<MstInterest>();
			}
		}
		
		public System.Data.Linq.Table<MstPayType> MstPayTypes
		{
			get
			{
				return this.GetTable<MstPayType>();
			}
		}
		
		public System.Data.Linq.Table<MstTerm> MstTerms
		{
			get
			{
				return this.GetTable<MstTerm>();
			}
		}
		
		public System.Data.Linq.Table<MstUser> MstUsers
		{
			get
			{
				return this.GetTable<MstUser>();
			}
		}
		
		public System.Data.Linq.Table<TrnCollection> TrnCollections
		{
			get
			{
				return this.GetTable<TrnCollection>();
			}
		}
		
		public System.Data.Linq.Table<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this.GetTable<TrnCollectionLine>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AspNetRole()
		{
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnLoan")]
	public partial class TrnLoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LoanNumber;
		
		private System.DateTime _LoanDate;
		
		private string _ManualLoanNumber;
		
		private int _CustomerId;
		
		private int _TermId;
		
		private decimal _TermNumberOfDays;
		
		private decimal _LoanAmount;
		
		private decimal _PreviousBalanceAmount;
		
		private int _InterestId;
		
		private decimal _InterestPercentage;
		
		private decimal _InterestAmount;
		
		private decimal _PaidAmount;
		
		private decimal _PenaltyAmount;
		
		private decimal _BalanceAmount;
		
		private decimal _DailyAmortizationAmount;
		
		private string _Remarks;
		
		private int _PreparedByUserId;
		
		private int _CheckedByUserId;
		
		private int _ApprovedByUserId;
		
		private string _Status;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntityRef<MstCustomer> _MstCustomer;
		
		private EntityRef<MstInterest> _MstInterest;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoanNumberChanging(string value);
    partial void OnLoanNumberChanged();
    partial void OnLoanDateChanging(System.DateTime value);
    partial void OnLoanDateChanged();
    partial void OnManualLoanNumberChanging(string value);
    partial void OnManualLoanNumberChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnTermNumberOfDaysChanging(decimal value);
    partial void OnTermNumberOfDaysChanged();
    partial void OnLoanAmountChanging(decimal value);
    partial void OnLoanAmountChanged();
    partial void OnPreviousBalanceAmountChanging(decimal value);
    partial void OnPreviousBalanceAmountChanged();
    partial void OnInterestIdChanging(int value);
    partial void OnInterestIdChanged();
    partial void OnInterestPercentageChanging(decimal value);
    partial void OnInterestPercentageChanged();
    partial void OnInterestAmountChanging(decimal value);
    partial void OnInterestAmountChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnPenaltyAmountChanging(decimal value);
    partial void OnPenaltyAmountChanged();
    partial void OnBalanceAmountChanging(decimal value);
    partial void OnBalanceAmountChanged();
    partial void OnDailyAmortizationAmountChanging(decimal value);
    partial void OnDailyAmortizationAmountChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByUserIdChanging(int value);
    partial void OnPreparedByUserIdChanged();
    partial void OnCheckedByUserIdChanging(int value);
    partial void OnCheckedByUserIdChanged();
    partial void OnApprovedByUserIdChanging(int value);
    partial void OnApprovedByUserIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnLoan()
		{
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._MstCustomer = default(EntityRef<MstCustomer>);
			this._MstInterest = default(EntityRef<MstInterest>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoanNumber
		{
			get
			{
				return this._LoanNumber;
			}
			set
			{
				if ((this._LoanNumber != value))
				{
					this.OnLoanNumberChanging(value);
					this.SendPropertyChanging();
					this._LoanNumber = value;
					this.SendPropertyChanged("LoanNumber");
					this.OnLoanNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDate", DbType="DateTime NOT NULL")]
		public System.DateTime LoanDate
		{
			get
			{
				return this._LoanDate;
			}
			set
			{
				if ((this._LoanDate != value))
				{
					this.OnLoanDateChanging(value);
					this.SendPropertyChanging();
					this._LoanDate = value;
					this.SendPropertyChanged("LoanDate");
					this.OnLoanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualLoanNumber", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ManualLoanNumber
		{
			get
			{
				return this._ManualLoanNumber;
			}
			set
			{
				if ((this._ManualLoanNumber != value))
				{
					this.OnManualLoanNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualLoanNumber = value;
					this.SendPropertyChanged("ManualLoanNumber");
					this.OnManualLoanNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermNumberOfDays", DbType="Decimal(18,2) NOT NULL")]
		public decimal TermNumberOfDays
		{
			get
			{
				return this._TermNumberOfDays;
			}
			set
			{
				if ((this._TermNumberOfDays != value))
				{
					this.OnTermNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._TermNumberOfDays = value;
					this.SendPropertyChanged("TermNumberOfDays");
					this.OnTermNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal LoanAmount
		{
			get
			{
				return this._LoanAmount;
			}
			set
			{
				if ((this._LoanAmount != value))
				{
					this.OnLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanAmount = value;
					this.SendPropertyChanged("LoanAmount");
					this.OnLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousBalanceAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal PreviousBalanceAmount
		{
			get
			{
				return this._PreviousBalanceAmount;
			}
			set
			{
				if ((this._PreviousBalanceAmount != value))
				{
					this.OnPreviousBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._PreviousBalanceAmount = value;
					this.SendPropertyChanged("PreviousBalanceAmount");
					this.OnPreviousBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestId", DbType="Int NOT NULL")]
		public int InterestId
		{
			get
			{
				return this._InterestId;
			}
			set
			{
				if ((this._InterestId != value))
				{
					if (this._MstInterest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInterestIdChanging(value);
					this.SendPropertyChanging();
					this._InterestId = value;
					this.SendPropertyChanged("InterestId");
					this.OnInterestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestPercentage", DbType="Decimal(18,2) NOT NULL")]
		public decimal InterestPercentage
		{
			get
			{
				return this._InterestPercentage;
			}
			set
			{
				if ((this._InterestPercentage != value))
				{
					this.OnInterestPercentageChanging(value);
					this.SendPropertyChanging();
					this._InterestPercentage = value;
					this.SendPropertyChanged("InterestPercentage");
					this.OnInterestPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal InterestAmount
		{
			get
			{
				return this._InterestAmount;
			}
			set
			{
				if ((this._InterestAmount != value))
				{
					this.OnInterestAmountChanging(value);
					this.SendPropertyChanging();
					this._InterestAmount = value;
					this.SendPropertyChanged("InterestAmount");
					this.OnInterestAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenaltyAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal PenaltyAmount
		{
			get
			{
				return this._PenaltyAmount;
			}
			set
			{
				if ((this._PenaltyAmount != value))
				{
					this.OnPenaltyAmountChanging(value);
					this.SendPropertyChanging();
					this._PenaltyAmount = value;
					this.SendPropertyChanged("PenaltyAmount");
					this.OnPenaltyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this.OnBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmount = value;
					this.SendPropertyChanged("BalanceAmount");
					this.OnBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyAmortizationAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal DailyAmortizationAmount
		{
			get
			{
				return this._DailyAmortizationAmount;
			}
			set
			{
				if ((this._DailyAmortizationAmount != value))
				{
					this.OnDailyAmortizationAmountChanging(value);
					this.SendPropertyChanging();
					this._DailyAmortizationAmount = value;
					this.SendPropertyChanged("DailyAmortizationAmount");
					this.OnDailyAmortizationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedByUserId", DbType="Int NOT NULL")]
		public int PreparedByUserId
		{
			get
			{
				return this._PreparedByUserId;
			}
			set
			{
				if ((this._PreparedByUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedByUserId = value;
					this.SendPropertyChanged("PreparedByUserId");
					this.OnPreparedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedByUserId", DbType="Int NOT NULL")]
		public int CheckedByUserId
		{
			get
			{
				return this._CheckedByUserId;
			}
			set
			{
				if ((this._CheckedByUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedByUserId = value;
					this.SendPropertyChanged("CheckedByUserId");
					this.OnCheckedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedByUserId", DbType="Int NOT NULL")]
		public int ApprovedByUserId
		{
			get
			{
				return this._ApprovedByUserId;
			}
			set
			{
				if ((this._ApprovedByUserId != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedByUserId = value;
					this.SendPropertyChanged("ApprovedByUserId");
					this.OnApprovedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnLoan_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="LoanId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCustomer_TrnLoan", Storage="_MstCustomer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstCustomer MstCustomer
		{
			get
			{
				return this._MstCustomer.Entity;
			}
			set
			{
				MstCustomer previousValue = this._MstCustomer.Entity;
				if (((previousValue != value) 
							|| (this._MstCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCustomer.Entity = null;
						previousValue.TrnLoans.Remove(this);
					}
					this._MstCustomer.Entity = value;
					if ((value != null))
					{
						value.TrnLoans.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("MstCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstInterest_TrnLoan", Storage="_MstInterest", ThisKey="InterestId", OtherKey="Id", IsForeignKey=true)]
		public MstInterest MstInterest
		{
			get
			{
				return this._MstInterest.Entity;
			}
			set
			{
				MstInterest previousValue = this._MstInterest.Entity;
				if (((previousValue != value) 
							|| (this._MstInterest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstInterest.Entity = null;
						previousValue.TrnLoans.Remove(this);
					}
					this._MstInterest.Entity = value;
					if ((value != null))
					{
						value.TrnLoans.Add(this);
						this._InterestId = value.Id;
					}
					else
					{
						this._InterestId = default(int);
					}
					this.SendPropertyChanged("MstInterest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnLoan", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnLoans.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnLoans.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLoan", Storage="_MstUser", ThisKey="PreparedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnLoans.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnLoans.Add(this);
						this._PreparedByUserId = value.Id;
					}
					else
					{
						this._PreparedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLoan1", Storage="_MstUser1", ThisKey="CheckedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnLoans1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnLoans1.Add(this);
						this._CheckedByUserId = value.Id;
					}
					else
					{
						this._CheckedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLoan2", Storage="_MstUser2", ThisKey="ApprovedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnLoans2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnLoans2.Add(this);
						this._ApprovedByUserId = value.Id;
					}
					else
					{
						this._ApprovedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLoan3", Storage="_MstUser3", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnLoans3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnLoans3.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLoan4", Storage="_MstUser4", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnLoans4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnLoans4.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.TrnLoan = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.TrnLoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    #endregion
		
		public AspNetUserClaim()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _UserId;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserLogin()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetRole> _AspNetRole;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRole()
		{
			this._AspNetRole = default(EntityRef<AspNetRole>);
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetRole AspNetRole
		{
			get
			{
				return this._AspNetRole.Entity;
			}
			set
			{
				AspNetRole previousValue = this._AspNetRole.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRole.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRole.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Email;
		
		private System.Nullable<bool> _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private System.Nullable<bool> _PhoneNumberConfirmed;
		
		private System.Nullable<bool> _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private System.Nullable<bool> _LockoutEnabled;
		
		private System.Nullable<int> _AccessFailedCount;
		
		private string _UserName;
		
		private EntitySet<AspNetUserClaim> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogin> _AspNetUserLogins;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
		private EntitySet<MstUser> _MstUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(System.Nullable<bool> value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(System.Nullable<bool> value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(System.Nullable<bool> value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(System.Nullable<bool> value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(System.Nullable<int> value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public AspNetUser()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaim>(new Action<AspNetUserClaim>(this.attach_AspNetUserClaims), new Action<AspNetUserClaim>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogin>(new Action<AspNetUserLogin>(this.attach_AspNetUserLogins), new Action<AspNetUserLogin>(this.detach_AspNetUserLogins));
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit")]
		public System.Nullable<bool> EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit")]
		public System.Nullable<bool> PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit")]
		public System.Nullable<bool> TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit")]
		public System.Nullable<bool> LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int")]
		public System.Nullable<int> AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUserClaims", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUserLogins", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="AspNetUserId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstCustomer")]
	public partial class MstCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FullName;
		
		private System.DateTime _BirthDate;
		
		private string _Gender;
		
		private string _Address;
		
		private string _ContactNumber;
		
		private string _Photo;
		
		private System.Nullable<int> _UserId;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnLoan> _TrnLoans;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnBirthDateChanging(System.DateTime value);
    partial void OnBirthDateChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstCustomer()
		{
			this._TrnLoans = new EntitySet<TrnLoan>(new Action<TrnLoan>(this.attach_TrnLoans), new Action<TrnLoan>(this.detach_TrnLoans));
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime NOT NULL")]
		public System.DateTime BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCustomer_TrnLoan", Storage="_TrnLoans", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnLoan> TrnLoans
		{
			get
			{
				return this._TrnLoans;
			}
			set
			{
				this._TrnLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCustomer_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer", Storage="_MstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstCustomers.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstCustomers.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer1", Storage="_MstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstCustomers1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstCustomers1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer2", Storage="_MstUser2", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstCustomers2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstCustomers2.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnLoans(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstCustomer = this;
		}
		
		private void detach_TrnLoans(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstCustomer = null;
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstCustomer = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstInterest")]
	public partial class MstInterest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Interest;
		
		private decimal _Percentage;
		
		private EntitySet<TrnLoan> _TrnLoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInterestChanging(string value);
    partial void OnInterestChanged();
    partial void OnPercentageChanging(decimal value);
    partial void OnPercentageChanged();
    #endregion
		
		public MstInterest()
		{
			this._TrnLoans = new EntitySet<TrnLoan>(new Action<TrnLoan>(this.attach_TrnLoans), new Action<TrnLoan>(this.detach_TrnLoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interest", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Interest
		{
			get
			{
				return this._Interest;
			}
			set
			{
				if ((this._Interest != value))
				{
					this.OnInterestChanging(value);
					this.SendPropertyChanging();
					this._Interest = value;
					this.SendPropertyChanged("Interest");
					this.OnInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Decimal(18,2) NOT NULL")]
		public decimal Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstInterest_TrnLoan", Storage="_TrnLoans", ThisKey="Id", OtherKey="InterestId")]
		public EntitySet<TrnLoan> TrnLoans
		{
			get
			{
				return this._TrnLoans;
			}
			set
			{
				this._TrnLoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnLoans(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstInterest = this;
		}
		
		private void detach_TrnLoans(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstInterest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPayType")]
	public partial class MstPayType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PayType;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPayTypeChanging(string value);
    partial void OnPayTypeChanged();
    #endregion
		
		public MstPayType()
		{
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="PayTypeId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTerm")]
	public partial class MstTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Term;
		
		private decimal _NumberOfDays;
		
		private EntitySet<TrnLoan> _TrnLoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTermChanging(string value);
    partial void OnTermChanged();
    partial void OnNumberOfDaysChanging(decimal value);
    partial void OnNumberOfDaysChanged();
    #endregion
		
		public MstTerm()
		{
			this._TrnLoans = new EntitySet<TrnLoan>(new Action<TrnLoan>(this.attach_TrnLoans), new Action<TrnLoan>(this.detach_TrnLoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="Decimal(18,2) NOT NULL")]
		public decimal NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this.OnNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDays = value;
					this.SendPropertyChanged("NumberOfDays");
					this.OnNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnLoan", Storage="_TrnLoans", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnLoan> TrnLoans
		{
			get
			{
				return this._TrnLoans;
			}
			set
			{
				this._TrnLoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnLoans(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnLoans(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUser")]
	public partial class MstUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AspNetUserId;
		
		private string _Username;
		
		private string _Password;
		
		private string _FullName;
		
		private bool _IsLocked;
		
		private string _UserType;
		
		private EntitySet<TrnLoan> _TrnLoans;
		
		private EntitySet<TrnLoan> _TrnLoans1;
		
		private EntitySet<TrnLoan> _TrnLoans2;
		
		private EntitySet<TrnLoan> _TrnLoans3;
		
		private EntitySet<TrnLoan> _TrnLoans4;
		
		private EntitySet<MstCustomer> _MstCustomers;
		
		private EntitySet<MstCustomer> _MstCustomers1;
		
		private EntitySet<MstCustomer> _MstCustomers2;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnCollection> _TrnCollections1;
		
		private EntitySet<TrnCollection> _TrnCollections2;
		
		private EntitySet<TrnCollection> _TrnCollections3;
		
		private EntitySet<TrnCollection> _TrnCollections4;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAspNetUserIdChanging(string value);
    partial void OnAspNetUserIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    #endregion
		
		public MstUser()
		{
			this._TrnLoans = new EntitySet<TrnLoan>(new Action<TrnLoan>(this.attach_TrnLoans), new Action<TrnLoan>(this.detach_TrnLoans));
			this._TrnLoans1 = new EntitySet<TrnLoan>(new Action<TrnLoan>(this.attach_TrnLoans1), new Action<TrnLoan>(this.detach_TrnLoans1));
			this._TrnLoans2 = new EntitySet<TrnLoan>(new Action<TrnLoan>(this.attach_TrnLoans2), new Action<TrnLoan>(this.detach_TrnLoans2));
			this._TrnLoans3 = new EntitySet<TrnLoan>(new Action<TrnLoan>(this.attach_TrnLoans3), new Action<TrnLoan>(this.detach_TrnLoans3));
			this._TrnLoans4 = new EntitySet<TrnLoan>(new Action<TrnLoan>(this.attach_TrnLoans4), new Action<TrnLoan>(this.detach_TrnLoans4));
			this._MstCustomers = new EntitySet<MstCustomer>(new Action<MstCustomer>(this.attach_MstCustomers), new Action<MstCustomer>(this.detach_MstCustomers));
			this._MstCustomers1 = new EntitySet<MstCustomer>(new Action<MstCustomer>(this.attach_MstCustomers1), new Action<MstCustomer>(this.detach_MstCustomers1));
			this._MstCustomers2 = new EntitySet<MstCustomer>(new Action<MstCustomer>(this.attach_MstCustomers2), new Action<MstCustomer>(this.detach_MstCustomers2));
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnCollections1 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections1), new Action<TrnCollection>(this.detach_TrnCollections1));
			this._TrnCollections2 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections2), new Action<TrnCollection>(this.detach_TrnCollections2));
			this._TrnCollections3 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections3), new Action<TrnCollection>(this.detach_TrnCollections3));
			this._TrnCollections4 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections4), new Action<TrnCollection>(this.detach_TrnCollections4));
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspNetUserId", DbType="NVarChar(128)")]
		public string AspNetUserId
		{
			get
			{
				return this._AspNetUserId;
			}
			set
			{
				if ((this._AspNetUserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAspNetUserIdChanging(value);
					this.SendPropertyChanging();
					this._AspNetUserId = value;
					this.SendPropertyChanged("AspNetUserId");
					this.OnAspNetUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLoan", Storage="_TrnLoans", ThisKey="Id", OtherKey="PreparedByUserId")]
		public EntitySet<TrnLoan> TrnLoans
		{
			get
			{
				return this._TrnLoans;
			}
			set
			{
				this._TrnLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLoan1", Storage="_TrnLoans1", ThisKey="Id", OtherKey="CheckedByUserId")]
		public EntitySet<TrnLoan> TrnLoans1
		{
			get
			{
				return this._TrnLoans1;
			}
			set
			{
				this._TrnLoans1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLoan2", Storage="_TrnLoans2", ThisKey="Id", OtherKey="ApprovedByUserId")]
		public EntitySet<TrnLoan> TrnLoans2
		{
			get
			{
				return this._TrnLoans2;
			}
			set
			{
				this._TrnLoans2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLoan3", Storage="_TrnLoans3", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<TrnLoan> TrnLoans3
		{
			get
			{
				return this._TrnLoans3;
			}
			set
			{
				this._TrnLoans3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLoan4", Storage="_TrnLoans4", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<TrnLoan> TrnLoans4
		{
			get
			{
				return this._TrnLoans4;
			}
			set
			{
				this._TrnLoans4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer", Storage="_MstCustomers", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<MstCustomer> MstCustomers
		{
			get
			{
				return this._MstCustomers;
			}
			set
			{
				this._MstCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer1", Storage="_MstCustomers1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<MstCustomer> MstCustomers1
		{
			get
			{
				return this._MstCustomers1;
			}
			set
			{
				this._MstCustomers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer2", Storage="_MstCustomers2", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstCustomer> MstCustomers2
		{
			get
			{
				return this._MstCustomers2;
			}
			set
			{
				this._MstCustomers2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="PreparedByUserId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection1", Storage="_TrnCollections1", ThisKey="Id", OtherKey="CheckedByUserId")]
		public EntitySet<TrnCollection> TrnCollections1
		{
			get
			{
				return this._TrnCollections1;
			}
			set
			{
				this._TrnCollections1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection2", Storage="_TrnCollections2", ThisKey="Id", OtherKey="ApprovedByUserId")]
		public EntitySet<TrnCollection> TrnCollections2
		{
			get
			{
				return this._TrnCollections2;
			}
			set
			{
				this._TrnCollections2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection3", Storage="_TrnCollections3", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<TrnCollection> TrnCollections3
		{
			get
			{
				return this._TrnCollections3;
			}
			set
			{
				this._TrnCollections3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection4", Storage="_TrnCollections4", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<TrnCollection> TrnCollections4
		{
			get
			{
				return this._TrnCollections4;
			}
			set
			{
				this._TrnCollections4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_MstUser", Storage="_AspNetUser", ThisKey="AspNetUserId", OtherKey="Id", IsForeignKey=true)]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._AspNetUserId = value.Id;
					}
					else
					{
						this._AspNetUserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnLoans(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnLoans(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnLoans1(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnLoans1(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnLoans2(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnLoans2(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnLoans3(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnLoans3(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnLoans4(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnLoans4(TrnLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_MstCustomers(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstCustomers(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstCustomers1(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstCustomers1(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstCustomers2(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstCustomers2(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnCollections1(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnCollections1(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnCollections2(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnCollections2(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnCollections3(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnCollections3(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnCollections4(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnCollections4(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnCollection")]
	public partial class TrnCollection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CollectionNumber;
		
		private System.DateTime _CollectionDate;
		
		private string _ManualCollectionNumber;
		
		private int _CustomerId;
		
		private int _LoanId;
		
		private decimal _PaidAmount;
		
		private decimal _PenaltyAmount;
		
		private string _Remarks;
		
		private int _PreparedByUserId;
		
		private int _CheckedByUserId;
		
		private int _ApprovedByUserId;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntityRef<MstCustomer> _MstCustomer;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<TrnLoan> _TrnLoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCollectionNumberChanging(string value);
    partial void OnCollectionNumberChanged();
    partial void OnCollectionDateChanging(System.DateTime value);
    partial void OnCollectionDateChanged();
    partial void OnManualCollectionNumberChanging(string value);
    partial void OnManualCollectionNumberChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnLoanIdChanging(int value);
    partial void OnLoanIdChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnPenaltyAmountChanging(decimal value);
    partial void OnPenaltyAmountChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByUserIdChanging(int value);
    partial void OnPreparedByUserIdChanged();
    partial void OnCheckedByUserIdChanging(int value);
    partial void OnCheckedByUserIdChanged();
    partial void OnApprovedByUserIdChanging(int value);
    partial void OnApprovedByUserIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnCollection()
		{
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._MstCustomer = default(EntityRef<MstCustomer>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._TrnLoan = default(EntityRef<TrnLoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CollectionNumber
		{
			get
			{
				return this._CollectionNumber;
			}
			set
			{
				if ((this._CollectionNumber != value))
				{
					this.OnCollectionNumberChanging(value);
					this.SendPropertyChanging();
					this._CollectionNumber = value;
					this.SendPropertyChanged("CollectionNumber");
					this.OnCollectionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionDate", DbType="DateTime NOT NULL")]
		public System.DateTime CollectionDate
		{
			get
			{
				return this._CollectionDate;
			}
			set
			{
				if ((this._CollectionDate != value))
				{
					this.OnCollectionDateChanging(value);
					this.SendPropertyChanging();
					this._CollectionDate = value;
					this.SendPropertyChanged("CollectionDate");
					this.OnCollectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualCollectionNumber", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ManualCollectionNumber
		{
			get
			{
				return this._ManualCollectionNumber;
			}
			set
			{
				if ((this._ManualCollectionNumber != value))
				{
					this.OnManualCollectionNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualCollectionNumber = value;
					this.SendPropertyChanged("ManualCollectionNumber");
					this.OnManualCollectionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int NOT NULL")]
		public int LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					if (this._TrnLoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenaltyAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal PenaltyAmount
		{
			get
			{
				return this._PenaltyAmount;
			}
			set
			{
				if ((this._PenaltyAmount != value))
				{
					this.OnPenaltyAmountChanging(value);
					this.SendPropertyChanging();
					this._PenaltyAmount = value;
					this.SendPropertyChanged("PenaltyAmount");
					this.OnPenaltyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedByUserId", DbType="Int NOT NULL")]
		public int PreparedByUserId
		{
			get
			{
				return this._PreparedByUserId;
			}
			set
			{
				if ((this._PreparedByUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedByUserId = value;
					this.SendPropertyChanged("PreparedByUserId");
					this.OnPreparedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedByUserId", DbType="Int NOT NULL")]
		public int CheckedByUserId
		{
			get
			{
				return this._CheckedByUserId;
			}
			set
			{
				if ((this._CheckedByUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedByUserId = value;
					this.SendPropertyChanged("CheckedByUserId");
					this.OnCheckedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedByUserId", DbType="Int NOT NULL")]
		public int ApprovedByUserId
		{
			get
			{
				return this._ApprovedByUserId;
			}
			set
			{
				if ((this._ApprovedByUserId != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedByUserId = value;
					this.SendPropertyChanged("ApprovedByUserId");
					this.OnApprovedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="CollectionId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCustomer_TrnCollection", Storage="_MstCustomer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstCustomer MstCustomer
		{
			get
			{
				return this._MstCustomer.Entity;
			}
			set
			{
				MstCustomer previousValue = this._MstCustomer.Entity;
				if (((previousValue != value) 
							|| (this._MstCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCustomer.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstCustomer.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("MstCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection", Storage="_MstUser", ThisKey="PreparedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._PreparedByUserId = value.Id;
					}
					else
					{
						this._PreparedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection1", Storage="_MstUser1", ThisKey="CheckedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnCollections1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnCollections1.Add(this);
						this._CheckedByUserId = value.Id;
					}
					else
					{
						this._CheckedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection2", Storage="_MstUser2", ThisKey="ApprovedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnCollections2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnCollections2.Add(this);
						this._ApprovedByUserId = value.Id;
					}
					else
					{
						this._ApprovedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection3", Storage="_MstUser3", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnCollections3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnCollections3.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection4", Storage="_MstUser4", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnCollections4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnCollections4.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnLoan_TrnCollection", Storage="_TrnLoan", ThisKey="LoanId", OtherKey="Id", IsForeignKey=true)]
		public TrnLoan TrnLoan
		{
			get
			{
				return this._TrnLoan.Entity;
			}
			set
			{
				TrnLoan previousValue = this._TrnLoan.Entity;
				if (((previousValue != value) 
							|| (this._TrnLoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnLoan.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._TrnLoan.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._LoanId = value.Id;
					}
					else
					{
						this._LoanId = default(int);
					}
					this.SendPropertyChanged("TrnLoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnCollectionLine")]
	public partial class TrnCollectionLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CollectionId;
		
		private int _PayTypeId;
		
		private decimal _PaidAmount;
		
		private decimal _PenaltyAmount;
		
		private EntityRef<MstPayType> _MstPayType;
		
		private EntityRef<TrnCollection> _TrnCollection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCollectionIdChanging(int value);
    partial void OnCollectionIdChanged();
    partial void OnPayTypeIdChanging(int value);
    partial void OnPayTypeIdChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnPenaltyAmountChanging(decimal value);
    partial void OnPenaltyAmountChanged();
    #endregion
		
		public TrnCollectionLine()
		{
			this._MstPayType = default(EntityRef<MstPayType>);
			this._TrnCollection = default(EntityRef<TrnCollection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionId", DbType="Int NOT NULL")]
		public int CollectionId
		{
			get
			{
				return this._CollectionId;
			}
			set
			{
				if ((this._CollectionId != value))
				{
					if (this._TrnCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollectionIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionId = value;
					this.SendPropertyChanged("CollectionId");
					this.OnCollectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTypeId", DbType="Int NOT NULL")]
		public int PayTypeId
		{
			get
			{
				return this._PayTypeId;
			}
			set
			{
				if ((this._PayTypeId != value))
				{
					if (this._MstPayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PayTypeId = value;
					this.SendPropertyChanged("PayTypeId");
					this.OnPayTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenaltyAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal PenaltyAmount
		{
			get
			{
				return this._PenaltyAmount;
			}
			set
			{
				if ((this._PenaltyAmount != value))
				{
					this.OnPenaltyAmountChanging(value);
					this.SendPropertyChanging();
					this._PenaltyAmount = value;
					this.SendPropertyChanged("PenaltyAmount");
					this.OnPenaltyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnCollectionLine", Storage="_MstPayType", ThisKey="PayTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstPayType MstPayType
		{
			get
			{
				return this._MstPayType.Entity;
			}
			set
			{
				MstPayType previousValue = this._MstPayType.Entity;
				if (((previousValue != value) 
							|| (this._MstPayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayType.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._MstPayType.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._PayTypeId = value.Id;
					}
					else
					{
						this._PayTypeId = default(int);
					}
					this.SendPropertyChanged("MstPayType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnCollectionLine", Storage="_TrnCollection", ThisKey="CollectionId", OtherKey="Id", IsForeignKey=true)]
		public TrnCollection TrnCollection
		{
			get
			{
				return this._TrnCollection.Entity;
			}
			set
			{
				TrnCollection previousValue = this._TrnCollection.Entity;
				if (((previousValue != value) 
							|| (this._TrnCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnCollection.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._TrnCollection.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._CollectionId = value.Id;
					}
					else
					{
						this._CollectionId = default(int);
					}
					this.SendPropertyChanged("TrnCollection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
