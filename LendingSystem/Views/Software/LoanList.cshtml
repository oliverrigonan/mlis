<h2>Loan List</h2>

<div>
    <h4>List of all loans</h4>
    <hr />

    <div class="panel panel-default">
        <div class="panel-heading">
            <a href="/Software" class="btn btn-default">Back</a>
            <button class="btn btn-primary" onclick="buttonClickAddCreate()">Create</button>
            <button class="btn btn-success" onclick="buttonDownload()">Download</button>
        </div>
    </div>

    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#tabActivity">Transactions (Activities)</a></li>
    </ul>

    <br />

    <div class="tab-content">
        <div id="tabActivity" class="tab-pane fade in active">
            <div class="row">
                <div class="col-md-3">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            Filters
                        </div>
                        <div class="panel-body">
                            <div class="form-group">
                                <label>Date Start</label>
                                <div id="wijmoInputDateStartDate"></div>
                            </div>
                            <div class="form-group">
                                <label>Date End</label>
                                <div id="wijmoInputDateEndDate"></div>
                            </div>
                            <div class="form-group">
                                <label>Transaction</label>
                                <div id="wijmoComboboxTransactionType"></div>
                            </div>
                            <div class="form-group">
                                <label>Customer</label>
                                <input class="form-control" id="filterCustomer" placeholder="Customer Name (If any)" />
                            </div>
                        </div>
                        <div class="panel-footer">
                            <button class="btn btn-success btn-block" onclick="buttonGetData()">Refresh (Get Data)</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-9">
                    <div id="wijmoGridLoanList"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fae" id="modalLoanDetailForm" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalTitle">Loan Detail</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>
                        Principal Amount
                    </dt>
                    <dd>
                        <input id="inputPrincipalAmount" class="form-control text-right number" onkeyup="computeAmouont()" />
                    </dd>
                    <dt>
                        Term
                    </dt>
                    <dd>
                        <div id="wijmoComboboxTerm"></div>
                    </dd>
                    <dt>
                        No. of Days
                    </dt>
                    <dd>
                        <input id="inputNumberOfDays" class="form-control text-right" readonly />
                    </dd>
                    <dt>
                        Interest
                    </dt>
                    <dd>
                        <div id="wijmoComboboxInterest"></div>
                    </dd>
                    <dt>
                        Interest Rate
                    </dt>
                    <dd>
                        <input id="inputInterestPercentage" class="form-control text-right number" readonly />
                    </dd>
                    <dt>
                        Interest Amount
                    </dt>
                    <dd>
                        <input id="inputInterestAmount" class="form-control text-right number" readonly />
                    </dd>
                    <dt>
                        Advance Interest
                    </dt>
                    <dd>
                        <input id="inputIsAdvanceInterestDeduction" type="checkbox" onclick="computeAmouont();" />
                    </dd>
                    <dt>
                        Loan Amount
                    </dt>
                    <dd>
                        <input id="inputLoanAmount" class="form-control text-right number" readonly />
                    </dd>
                    <dt>
                        Previous Balance
                    </dt>
                    <dd>
                        <input id="inputPreviousLoanAmount" class="form-control text-right number" readonly />
                    </dd>
                    <dt>
                        Collectible
                    </dt>
                    <dd>
                        <input id="inputCollectibleAmount" class="form-control text-right number" readonly />
                    </dd>
                    <dt>
                        Claim
                    </dt>
                    <dd>
                        <input id="inputClaimAmount" class="form-control text-right number" readonly />
                    </dd>
                    <dt>
                        Remarks
                    </dt>
                    <dd>
                        <textarea id="inputLoanRemarks" class="form-control" rows="7"></textarea>
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" id="buttonClickApproveLoan" onclick="buttonClickApproveLoan()">Approve</button>
                <button class="btn btn-primary" id="buttonClickDisapproveLoan" onclick="buttonClickDisapproveLoan()">Disapprove</button>
                <button class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var wijmoInputDateStartDate;
    var wijmoInputDateEndDate;
    var wijmoComboboxTransactionType;

    var wijmoCollectionViewLoanList;
    var wijmoGridLoanList;

    var wijmoComboboxTerm;

    function getDataLoanList() {
        var loanListObservableArray = new wijmo.collections.ObservableArray;

        var startDate = wijmoInputDateStartDate.value.toLocaleDateString().replace(/\//g, '-');
        var endDate = wijmoInputDateEndDate.value.toLocaleDateString().replace(/\//g, '-');
        var transactionType = wijmoComboboxTransactionType.text;
        var customerName = document.getElementById("filterCustomer").value;

        $.ajax({
            url: "/api/loan/list/" + startDate + "/ " + endDate + "/" + transactionType + "?customerName=" + customerName,
            cache: false,
            type: "GET",
            contentType: "application/json; charset=utf-8",
            success: function (results) {
                if (results.length > 0) {
                    for (var i = 0; i < results.length; i++) {
                        loanListObservableArray.push({
                            ButtonOptions: "<button class='btn btn-primary btn-xs btn-block' onclick='buttonClickOptions()'>Options</button>",
                            Id: results[i]["Id"],
                            LoanNumber: results[i]["LoanNumber"],
                            LoanDate: results[i]["LoanDate"],
                            CustomerId: results[i]["CustomerId"],
                            Customer: results[i]["Customer"],
                            TermId: results[i]["TermId"],
                            Term: results[i]["Term"],
                            PrincipalAmount: results[i]["PrincipalAmount"],
                            PrincipalAmountDisplay: parseFloat(results[i]["PrincipalAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            InterestId: results[i]["InterestId"],
                            Interest: results[i]["Interest"],
                            InterestPercentage: results[i]["InterestPercentage"],
                            InterestPercentageDisplay: parseFloat(results[i]["InterestPercentage"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            InterestAmount: results[i]["InterestAmount"],
                            InterestAmountDisplay: parseFloat(results[i]["InterestAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            LoanAmount: results[i]["LoanAmount"],
                            LoanAmountDisplay: parseFloat(results[i]["LoanAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            NetAmount: results[i]["NetAmount"],
                            NetAmountDisplay: parseFloat(results[i]["NetAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            AmortizationAmount: results[i]["AmortizationAmount"],
                            AmortizationAmountDisplay: parseFloat(results[i]["AmortizationAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            PaidAmount: results[i]["PaidAmount"],
                            PaidAmountDisplay: parseFloat(results[i]["PaidAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            PenaltyAmount: results[i]["PenaltyAmount"],
                            PenaltyAmountDisplay: parseFloat(results[i]["PenaltyAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            BalanceAmount: results[i]["BalanceAmount"],
                            BalanceAmountDisplay: parseFloat(results[i]["BalanceAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            Remarks: results[i]["Remarks"],
                            Status: results[i]["Status"]
                        });
                    }
                }
            }
        });

        return loanListObservableArray;
    }

    function createWijmoGridLoanList() {
        wijmoCollectionViewLoanList = new wijmo.collections.CollectionView(getDataLoanList());
        wijmoCollectionViewLoanList.canFilter = true;

        wijmoGridLoanList = new wijmo.grid.FlexGrid("#wijmoGridLoanList");
        wijmoGridLoanList.initialize({
            columns: [
                {
                    "header": "Options",
                    "binding": "ButtonOptions",
                    "width": 90,
                    "align": "center",
                    "allowResizing": false,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {
                    "header": "Loan No.",
                    "binding": "LoanNumber",
                    "allowSorting": true,
                    "width": 100
                },
                {
                    "header": "Date",
                    "binding": "LoanDate",
                    "allowSorting": true,
                    "width": 90
                },
                {
                    "header": "Customer",
                    "binding": "Customer",
                    "allowSorting": true,
                    "width": 200
                },
                {
                    "header": "Principal",
                    "binding": "PrincipalAmountDisplay",
                    "allowSorting": true,
                    "align": "right",
                    "width": 100
                },
                {
                    "header": "Paid",
                    "binding": "PaidAmountDisplay",
                    "allowSorting": true,
                    "align": "right",
                    "width": 100
                },
                {
                    "header": "Penalty",
                    "binding": "PenaltyAmountDisplay",
                    "allowSorting": true,
                    "align": "right",
                    "width": 100
                },
                {
                    "header": "Balance",
                    "binding": "BalanceAmountDisplay",
                    "allowSorting": true,
                    "align": "right",
                    "width": 100
                },
                {
                    "header": "Status",
                    "binding": "Status",
                    "allowSorting": true,
                    "width": 100
                }
            ],
            autoGenerateColumns: false,
            itemsSource: wijmoCollectionViewLoanList,
            isReadOnly: true,
            autoSizeMode: wijmo.grid.AutoSizeMode.Both,
            allowDragging: wijmo.grid.AllowDragging.None,
            selectionMode: wijmo.grid.SelectionMode.Row,
            frozenColumns: 1
        });
    }

    function createWijmoComboboxTerm(isDisalbed) {
        var termObservableArray = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/current/loan/dropdown/list/term',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            success: function (results) {
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        termObservableArray.push({
                            Id: results[i]["Id"],
                            Term: results[i]["Term"]
                        });
                    }
                }

                wijmoComboboxTerm.dispose();
                wijmoComboboxTerm = new wijmo.input.ComboBox('#wijmoComboboxTerm', {
                    disabled: isDisalbed,
                    placeholder: "Select Term",
                    itemsSource: termObservableArray,
                    displayMemberPath: "Term",
                    selectedValuePath: "Id"
                });
            }
        });
    }

    function buttonClickOptions() {

    }

    function buttonClickOpenLoan() {
        document.getElementById("modalTitle").innerHTML = "View Loan";

        $("#modalLoanDetailForm").modal({
            show: true,
            backdrop: "static"
        });

        createWijmoComboboxTerm(true);
    }

    function buttonGetData() {
        wijmoCollectionViewLoanList = new wijmo.collections.CollectionView(getDataLoanList());
        wijmoCollectionViewLoanList.canFilter = true;
        wijmoGridLoanList.itemsSource = wijmoCollectionViewLoanList;
    }

    window.onload = function () {
        var date = new Date();

        wijmoInputDateStartDate = new wijmo.input.InputDate('#wijmoInputDateStartDate', {
            format: 'MM-dd-yyyy',
            value: new Date(date.getFullYear(), date.getMonth(), 1)
        });

        wijmoInputDateEndDate = new wijmo.input.InputDate('#wijmoInputDateEndDate', {
            format: 'MM-dd-yyyy',
            value: new Date(date.getFullYear(), date.getMonth() + 1, 0)
        });

        var statusObservableArray = new wijmo.collections.ObservableArray();
        statusObservableArray.push("All");
        statusObservableArray.push("Open");
        statusObservableArray.push("Close");

        wijmoComboboxTransactionType = new wijmo.input.ComboBox('#wijmoComboboxTransactionType', {
            placeholder: "Select Transaction Type",
            itemsSource: statusObservableArray
        });

        wijmoComboboxTransactionType.text = "Open";

        createWijmoGridLoanList();
        wijmoComboboxTerm = new wijmo.input.ComboBox('#wijmoComboboxTerm');

    }
</script>
